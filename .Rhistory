clustered_se <- sqrt(diag(vcovCL(homoscedastic_model, cluster = ~ ticker, data = data)))
# Generate regression table
stargazer(homoscedastic_model, homoscedastic_model, homoscedastic_model,
se = list(NULL, robust_se, clustered_se),
title = "Regression Table",
header = FALSE,
model.names = FALSE,
omit.stat = "all",
column.labels = c("Homoskedastic", "Heteroskedasticity-Corrected", "Stock-Clustered"),
type = "text")
# Plot
# Preparing predictions from the model
data$predicted <- predict(homoscedastic_model, data)
# Plotting the graph
plot(data$RET, data$ln_SVI,
xlab = "RET",
ylab = "ln(1 + SVI)",
main = "Plot with Predictions from the Model",
pch = 20)
abline(homoscedastic_model, col = "red")  # Adding regression line
points(data$RET, data$predicted, col = "blue", pch = 20)  # Adding predicted points
# Plot
# Preparing predictions from the model
data$predicted <- predict(homoscedastic_model, data)
# Plotting the graph
plot(data$RET, data$ln_SVI,
xlab = "RET",
ylab = "ln(1 + SVI)",
main = "Plot with Predictions from the Model",
pch = 20)
abline(homoscedastic_model, col = "red")  # Adding regression line
points(data$RET, data$predicted, col = "blue", pch = 20)  # Adding predicted points
# Task 1 ------------------------------------------------------------------
# Prepare your data
data$Abs_RET <- abs(data$RET)  # Compute absolute value of returns
data$ln_SVI <- log(1 + data$SVI)  # Compute ln(1 + SVI)
# Model with homoscedastic standard errors
homoscedastic_model <- lm(ln_SVI ~ Abs_RET, data = data)
# Obtain heteroskedasticity-robust standard errors
robust_se <- sqrt(diag(vcovHC(homoscedastic_model, type = "HC3")))
# Obtain stock-clustered standard errors
clustered_se <- sqrt(diag(vcovCL(homoscedastic_model, cluster = ~ ticker, data = data)))
# Generate regression table
stargazer(homoscedastic_model, homoscedastic_model, homoscedastic_model,
se = list(NULL, robust_se, clustered_se),
title = "Regression Table",
header = FALSE,
model.names = FALSE,
omit.stat = "all",
column.labels = c("Homoskedastic", "Heteroskedasticity-Corrected", "Stock-Clustered"),
type = "text")
# Plot
# Preparing predictions from the model
data$predicted <- predict(homoscedastic_model, data)
# Plotting the graph
plot(data$RET, data$ln_SVI,
xlab = "RET",
ylab = "ln(1 + SVI)",
main = "Plot with Predictions from the Model",
pch = 20)
abline(homoscedastic_model, col = "red")  # Adding regression line
points(data$RET, data$predicted, col = "blue", pch = 20)  # Adding predicted points
# Task 1 ------------------------------------------------------------------
# Prepare your data
data$Abs_RET <- abs(data$RET)  # Compute absolute value of returns
data$ln_SVI <- log(1 + data$SVI)  # Compute ln(1 + SVI)
# Model with homoscedastic standard errors
homoscedastic_model <- lm(ln_SVI ~ Abs_RET, data = data)
# Obtain heteroskedasticity-robust standard errors
robust_se <- sqrt(diag(vcovHC(homoscedastic_model, type = "HC3")))
# Obtain stock-clustered standard errors
clustered_se <- sqrt(diag(vcovCL(homoscedastic_model, cluster = ~ ticker, data = data)))
# Generate regression table
stargazer(homoscedastic_model, homoscedastic_model, homoscedastic_model,
se = list(NULL, robust_se, clustered_se),
title = "Regression Table",
header = FALSE,
model.names = FALSE,
omit.stat = "all",
column.labels = c("Homoskedastic", "Heteroskedasticity-Corrected", "Stock-Clustered"),
type = "text")
# Plot
# Preparing predictions from the model
data$predicted <- predict(homoscedastic_model, data)
# Plotting the graph
plot(data$RET, data$ln_SVI,
xlab = "RET",
ylab = "ln(1 + SVI)",
main = "Plot with Predictions from the Model",
pch = 20)
abline(homoscedastic_model, col = "red")  # Adding regression line
points(data$RET, data$predicted, col = "blue", pch = 20)  # Adding predicted points
robust_se <- coeftest(homoscedastic_model, vcov=vcovHC(homoscedastic_model, cluster="ticker", type="HC3"))[,2]
# Generate regression table
stargazer(homoscedastic_model, homoscedastic_model, homoscedastic_model,
se = list(NULL, robust_se, clustered_se),
title = "Regression Table",
header = FALSE,
model.names = FALSE,
omit.stat = "all",
column.labels = c("Homoskedastic", "Heteroskedasticity-Corrected", "Stock-Clustered"),
type = "text")
robust_se <- coeftest(homoscedastic_model, vcov=vcovHC(homoscedastic_model, type="HC3"))[,2]
# Load necessary libraries
require(DescTools)
require(plm)
require(dplyr)
require(lmtest)
library(sandwich)
require(stargazer)
require(tidyverse)
# Load the data
data <- read.csv("SVI.csv")
# Remove missing observations and format date
data <- na.omit(data)
data$date <- as.Date(data$date, format="%d%b%Y")
# Declare the dataset to be a panel data
pdata <- pdata.frame(data, index = c("ticker","date"))
head(data)
summary(data)
# Task 1 ------------------------------------------------------------------
# Prepare your data
data$Abs_RET <- abs(data$RET)  # Compute absolute value of returns
data$ln_SVI <- log(1 + data$SVI)  # Compute ln(1 + SVI)
# Model with homoscedastic standard errors
homoscedastic_model <- lm(ln_SVI ~ Abs_RET, data = data)
# Obtain heteroskedasticity-robust standard errors
robust_se <- sqrt(diag(vcovHC(homoscedastic_model, type = "HC3")))
# Obtain stock-clustered standard errors
clustered_se <- sqrt(diag(vcovCL(homoscedastic_model, cluster = ~ ticker, data = data)))
# Generate regression table
stargazer(homoscedastic_model, homoscedastic_model, homoscedastic_model,
se = list(NULL, robust_se, clustered_se),
title = "Regression Table",
header = FALSE,
model.names = FALSE,
omit.stat = "all",
column.labels = c("Homoskedastic", "Heteroskedasticity-Corrected", "Stock-Clustered"),
type = "text")
# Plot
# Preparing predictions from the model
data$predicted <- predict(homoscedastic_model, data)
# Plotting the graph
plot(data$RET, data$ln_SVI,
xlab = "RET",
ylab = "ln(1 + SVI)",
main = "Plot with Predictions from the Model",
pch = 20)
abline(homoscedastic_model, col = "red")  # Adding regression line
points(data$RET, data$predicted, col = "blue", pch = 20)  # Adding predicted points
clustered_se <- coeftest(homoscedastic_model, vcov = vcovCL(homoscedastic_model, cluster = ~ ticker, data = data))[, 2]
robust_se <- coeftest(homoscedastic_model, vcov = vcovHC(homoscedastic_model, type = "HC3"))[, 2]
# Generate regression table
stargazer(homoscedastic_model, homoscedastic_model, homoscedastic_model,
se = list(NULL, robust_se, clustered_se),
title = "Regression Table",
header = FALSE,
model.names = FALSE,
omit.stat = "all",
column.labels = c("Homoskedastic", "Heteroskedasticity-Corrected", "Stock-Clustered"),
type = "text")
# Prepare data for regression analysis
data$ln_SVI_lag <- lag(data$ln_SVI)  # Compute lag of ln(1 + SVI)
data$Abs_vwretd <- abs(data$vwretd)  # Compute absolute value of market return
# Estimate Model 1
model_1 <- lm(ln_SVI ~ Abs_RET + Abs_vwretd, data = data)
# Cluster standard errors at stock level for Model 1
clustered_se_model_1 <- coeftest(model_1, vcov = vcovCL(model_1, cluster = ~ ticker, data = data))[, 2]
# Estimate Model 2
model_2 <- lm(ln_SVI ~ Abs_RET + ln_SVI_lag, data = data)
# Cluster standard errors at stock level for Model 2
clustered_se_model_2 <- coeftest(model_2, vcov = vcovCL(model_2, cluster = ~ ticker, data = data))[, 2]
# Estimate Model 3
model_3 <- lm(ln_SVI ~ Abs_RET + Abs_vwretd + ln_SVI_lag, data = data)
# Cluster standard errors at stock level for Model 3
clustered_se_model_3 <- coeftest(model_3, vcov = vcovCL(model_3, cluster = ~ ticker, data = data))[, 2]
# Create a regression table
stargazer(model_1, model_2, model_3, type = "text",
se = list(clustered_se_model_1, clustered_se_model_2, clustered_se_model_3),
title = "Regression Table with Controls",
header = FALSE,
model.names = FALSE,
omit.stat = "all",
column.labels = c("Model 1", "Model 2", "Model 3"),
type = "text")
stargazer(model_1, model_2, model_3,
se = list(clustered_se_model_1, clustered_se_model_2, clustered_se_model_3),
title = "Regression Table with Controls",
header = FALSE,
model.names = FALSE,
omit.stat = "all",
column.labels = c("Model 1", "Model 2", "Model 3"),
type = "text")
# Create a regression table
stargazer(model_1, model_2, model_3,
se = list(clustered_se_model_1, clustered_se_model_2, clustered_se_model_3),
title = "Regression Table with Controls",
header = FALSE,
model.names = FALSE,
omit.stat = "all",
column.labels = c("Model 1", "Model 2", "Model 3"),
type = "text")
# Create a regression table
stargazer(model_1, model_2, model_3,
se = list(clustered_se_model_1, clustered_se_model_2, clustered_se_model_3),
title = "Regression Table with Controls",
header = FALSE,
model.names = FALSE,
omit.stat = "all",
column.labels = c("Model 1", "Model 2", "Model 3"),
type = "text")
# Load necessary libraries
require(DescTools)
require(plm)
require(dplyr)
require(lmtest)
library(sandwich)
require(stargazer)
require(tidyverse)
# Load the data
data <- read.csv("SVI.csv")
# Remove missing observations and format date
data <- na.omit(data)
data$date <- as.Date(data$date, format="%d%b%Y")
# Declare the dataset to be a panel data
pdata <- pdata.frame(data, index = c("ticker","date"))
head(data)
summary(data)
# Task 1 ------------------------------------------------------------------
# Prepare your data
data$Abs_RET <- abs(data$RET)  # Compute absolute value of returns
data$ln_SVI <- log(1 + data$SVI)  # Compute ln(1 + SVI)
# Model with homoscedastic standard errors
homoscedastic_model <- lm(ln_SVI ~ Abs_RET, data = data)
# Obtain heteroskedasticity-robust standard errors
robust_se <- coeftest(homoscedastic_model, vcov = vcovHC(homoscedastic_model, type = "HC3"))[, 2]
# Obtain stock-clustered standard errors
clustered_se <- coeftest(homoscedastic_model, vcov = vcovCL(homoscedastic_model, cluster = ~ ticker, data = data))[, 2]
# Generate regression table
stargazer(homoscedastic_model, homoscedastic_model, homoscedastic_model,
se = list(NULL, robust_se, clustered_se),
title = "Regression Table",
header = FALSE,
model.names = FALSE,
omit.stat = "all",
column.labels = c("Homoskedastic", "Heteroskedasticity-Corrected", "Stock-Clustered"),
type = "text")
# Plot
# Preparing predictions from the model
data$predicted <- predict(homoscedastic_model, data)
# Plotting the graph
plot(data$RET, data$ln_SVI,
xlab = "RET",
ylab = "ln(1 + SVI)",
main = "Plot with Predictions from the Model",
pch = 20)
abline(homoscedastic_model, col = "red")  # Adding regression line
points(data$RET, data$predicted, col = "blue", pch = 20)  # Adding predicted points
# Task 2 ------------------------------------------------------------------
# Prepare data for regression analysis
data <- data %>%
group_by(ticker) %>%
arrange(date) %>%
mutate(ln_SVI_lag = lag(ln(1 + SVI), order_by = date))  # Compute ln(1 + SVI)_lag correctly
data <- data %>%
group_by(ticker) %>%
arrange(date) %>%
mutate(ln_SVI_lag = lag(log(1 + SVI), order_by = date))  # Compute ln(1 + SVI)_lag correctly using log, not ln
# Load necessary libraries
require(DescTools)
require(plm)
require(dplyr)
require(lmtest)
library(sandwich)
require(stargazer)
require(tidyverse)
# Load the data
data <- read.csv("SVI.csv")
# Remove missing observations and format date
data <- na.omit(data)
data$date <- as.Date(data$date, format="%d%b%Y")
# Declare the dataset to be a panel data
pdata <- pdata.frame(data, index = c("ticker","date"))
data <- as.data.frame(pdata)
head(data)
summary(data)
# Task 1 ------------------------------------------------------------------
# Prepare your data
data$Abs_RET <- abs(data$RET)  # Compute absolute value of returns
data$ln_SVI <- log(1 + data$SVI)  # Compute ln(1 + SVI)
# Model with homoscedastic standard errors
homoscedastic_model <- lm(ln_SVI ~ Abs_RET, data = data)
# Obtain heteroskedasticity-robust standard errors
robust_se <- coeftest(homoscedastic_model, vcov = vcovHC(homoscedastic_model, type = "HC3"))[, 2]
# Obtain stock-clustered standard errors
clustered_se <- coeftest(homoscedastic_model, vcov = vcovCL(homoscedastic_model, cluster = ~ ticker, data = data))[, 2]
# Generate regression table
stargazer(homoscedastic_model, homoscedastic_model, homoscedastic_model,
se = list(NULL, robust_se, clustered_se),
title = "Regression Table",
header = FALSE,
model.names = FALSE,
omit.stat = "all",
column.labels = c("Homoskedastic", "Heteroskedasticity-Corrected", "Stock-Clustered"),
type = "text")
# Plot
# Preparing predictions from the model
data$predicted <- predict(homoscedastic_model, data)
# Plotting the graph
plot(data$RET, data$ln_SVI,
xlab = "RET",
ylab = "ln(1 + SVI)",
main = "Plot with Predictions from the Model",
pch = 20)
View(data)
# Load necessary libraries
require(DescTools)
require(plm)
require(dplyr)
require(lmtest)
library(sandwich)
require(stargazer)
require(tidyverse)
# Load the data
data <- read.csv("SVI.csv")
# Remove missing observations and format date
data <- na.omit(data)
data$date <- as.Date(data$date, format="%d%b%Y")
# Declare the dataset to be a panel data
data <- pdata.frame(data, index = c("ticker","date"))
head(data)
summary(data)
# Task 1 ------------------------------------------------------------------
# Prepare your data
data$Abs_RET <- abs(data$RET)  # Compute absolute value of returns
data$ln_SVI <- log(1 + data$SVI)  # Compute ln(1 + SVI)
# Model with homoscedastic standard errors
homoscedastic_model <- lm(ln_SVI ~ Abs_RET, data = data)
# Obtain heteroskedasticity-robust standard errors
robust_se <- coeftest(homoscedastic_model, vcov = vcovHC(homoscedastic_model, type = "HC3"))[, 2]
# Obtain stock-clustered standard errors
clustered_se <- coeftest(homoscedastic_model, vcov = vcovCL(homoscedastic_model, cluster = ~ ticker, data = data))[, 2]
# Generate regression table
stargazer(homoscedastic_model, homoscedastic_model, homoscedastic_model,
se = list(NULL, robust_se, clustered_se),
title = "Regression Table",
header = FALSE,
model.names = FALSE,
omit.stat = "all",
column.labels = c("Homoskedastic", "Heteroskedasticity-Corrected", "Stock-Clustered"),
type = "text")
# Plot
# Preparing predictions from the model
data$predicted <- predict(homoscedastic_model, data)
# Plotting the graph
plot(data$RET, data$ln_SVI,
xlab = "RET",
ylab = "ln(1 + SVI)",
main = "Plot with Predictions from the Model",
pch = 20)
View(data)
# Load necessary libraries
require(DescTools)
require(plm)
require(dplyr)
require(lmtest)
library(sandwich)
require(stargazer)
require(tidyverse)
# Load the data
data <- read.csv("SVI.csv")
# Remove missing observations and format date
data <- na.omit(data)
data$date <- as.Date(data$date, format="%d%b%Y")
# Declare the dataset to be a panel data
data <- pdata.frame(data, index = c("ticker","date"))
head(data)
summary(data)
# Task 1 ------------------------------------------------------------------
# Prepare your data
data$Abs_RET <- abs(data$RET)  # Compute absolute value of returns
data$ln_SVI <- log(1 + data$SVI)  # Compute ln(1 + SVI)
# Model with homoscedastic standard errors
homoscedastic_model <- lm(ln_SVI ~ Abs_RET, data = data)
# Obtain heteroskedasticity-robust standard errors
robust_se <- coeftest(homoscedastic_model, vcov = vcovHC(homoscedastic_model, type = "HC3"))[, 2]
# Obtain stock-clustered standard errors
clustered_se <- coeftest(homoscedastic_model, vcov = vcovCL(homoscedastic_model, cluster = ~ ticker, data = data))[, 2]
# Generate regression table
stargazer(homoscedastic_model, homoscedastic_model, homoscedastic_model,
se = list(NULL, robust_se, clustered_se),
title = "Regression Table",
header = FALSE,
model.names = FALSE,
omit.stat = "all",
column.labels = c("Homoskedastic", "Heteroskedasticity-Corrected", "Stock-Clustered"),
type = "text")
# Plot
# Preparing predictions from the model
data$predicted <- predict(homoscedastic_model, data)
# Plotting the graph
plot(data$RET, data$ln_SVI,
xlab = "RET",
ylab = "ln(1 + SVI)",
main = "Plot with Predictions from the Model",
pch = 20)
# Task 2 ------------------------------------------------------------------
# Prepare data for regression analysis
data <- data %>%
group_by(ticker) %>%
arrange(date) %>%
mutate(ln_SVI_lag = lag(log(1 + SVI), order_by = date))  # Compute ln(1 + SVI)_lag correctly using log, not ln
data$Abs_vwretd <- abs(data$vwretd)  # Compute absolute value of market return
# Task 2 ------------------------------------------------------------------
# Estimate Model 1
model_1 <- lm(ln_SVI ~ Abs_RET + Abs_vwretd, data = data)
# Cluster standard errors at stock level for Model 1
clustered_se_model_1 <- coeftest(model_1, vcov = vcovCL(model_1, cluster = ~ ticker, data = data))[, 2]
# Estimate Model 2
model_2 <- lm(ln_SVI ~ Abs_RET + ln_SVI_lag, data = data)
# Cluster standard errors at stock level for Model 2
clustered_se_model_2 <- coeftest(model_2, vcov = vcovCL(model_2, cluster = ~ ticker, data = data))[, 2]
# Estimate Model 3
model_3 <- lm(ln_SVI ~ Abs_RET + Abs_vwretd + ln_SVI_lag, data = data)
# Cluster standard errors at stock level for Model 3
clustered_se_model_3 <- coeftest(model_3, vcov = vcovCL(model_3, cluster = ~ ticker, data = data))[, 2]
# Create a regression table
stargazer(model_1, model_2, model_3,
se = list(clustered_se_model_1, clustered_se_model_2, clustered_se_model_3),
title = "Regression Table with Controls",
header = FALSE,
model.names = FALSE,
omit.stat = "all",
column.labels = c("Model 1", "Model 2", "Model 3"),
type = "text")
# Visualization for Model 2
# Step 1: No changes needed as ln_SVI_lag is now correctly computed
fit_1 <- lm(ln_SVI ~ ln_SVI_lag, data = data)
data$y_res <- residuals(fit_1)
# Try a simplified version of the plot function
plot(data$RET, data$ln_SVI)
# If the simplified plot works, try adding the arguments back one at a time to identify the issue
plot(data$RET, data$ln_SVI,
xlab = "RET",
ylab = "ln(1 + SVI)")
plot(data$RET, data$ln_SVI,
xlab = "RET",
ylab = "ln(1 + SVI)",
main = "Plot with Predictions from the Model")
plot(data$RET, data$ln_SVI,
xlab = "RET",
ylab = "ln(1 + SVI)",
main = "Plot with Predictions from the Model",
pch = 20)
These steps should help identify whether the issue is with the data being passed to the plot function or with one of the additional arguments being used.
# Load necessary libraries
require(DescTools)
require(plm)
require(dplyr)
require(lmtest)
library(sandwich)
require(stargazer)
require(tidyverse)
# Load the data
data <- read.csv("SVI.csv")
# Remove missing observations and format date
data <- na.omit(data)
data$date <- as.Date(data$date, format="%d%b%Y")
# Declare the dataset to be a panel data
data <- pdata.frame(data, index = c("ticker","date"))
View(data)
# Prepare your data
data$Abs_RET <- abs(data$RET)  # Compute absolute value of returns
data$ln_SVI <- log(1 + data$SVI)  # Compute ln(1 + SVI)
# Model with homoscedastic standard errors
homoscedastic_model <- lm(ln_SVI ~ Abs_RET, data = data)
# Obtain heteroskedasticity-robust standard errors
robust_se <- coeftest(homoscedastic_model, vcov = vcovHC(homoscedastic_model, type = "HC3"))[, 2]
# Obtain stock-clustered standard errors
clustered_se <- coeftest(homoscedastic_model, vcov = vcovCL(homoscedastic_model, cluster = ~ ticker, data = data))[, 2]
# Generate regression table
stargazer(homoscedastic_model, homoscedastic_model, homoscedastic_model,
se = list(NULL, robust_se, clustered_se),
title = "Regression Table",
header = FALSE,
model.names = FALSE,
omit.stat = "all",
column.labels = c("Homoskedastic", "Heteroskedasticity-Corrected", "Stock-Clustered"),
type = "text")
# Plot
# Preparing predictions from the model
data$predicted <- predict(homoscedastic_model, data)
# Plotting the graph
plot(data$RET, data$ln_SVI,
xlab = "RET",
ylab = "ln(1 + SVI)",
main = "Plot with Predictions from the Model",
pch = 20)
View(data)
View(data)
# Plotting the graph
plot(data$RET, data$ln_SVI,
xlab = "RET",
ylab = "ln(1 + SVI)",
main = "Plot with Predictions from the Model",
pch = 20)
plot(data$RET, data$ln_SVI)
plot(data$RET, data$ln_SVI)
conflicts(detail = TRUE)
graphics::plot(data$RET, data$ln_SVI)
class(data$RET)
class(data$ln_SVI)
